---
title: "LUC Stim Project"
subtitle: "Initial Data Exploration"
author: "Matt Kmiecik"
date: "22 July 2023"
project:
  execute-dir: project
format:
    pdf: default
    html: 
      self-contained: true
      grid: 
        margin-width: 350px
execute: 
  echo: fenced
  warning: false
  message: false
reference-location: margin
citation-location: margin
bibliography: skeleton.bib
editor_options: 
  chunk_output_type: console
---

# Introduction

This document performs some initial data visualization and analysis of the LUC stim project.

```{r}
# Loads libraries
library(tidyverse)
library(lme4)
library(lmerTest)
```

```{r}
# Loads data
files <- as.list(dir(path = "../output/", pattern = "*.rda", full.names = TRUE))
walk(files, ~load(.x, .GlobalEnv))
```

# Center of Gravity Results

```{r}
# these are actual subjects
this_ss <-
  c(
    "146183842001_1", "146183842003_1", "146183842004_1", "146183842006_1", 
    "146183842007_1"
    )

# first collapse by block
cog_res_block <- 
  cog_res %>%
  # filters out missing values; focuses on stim blocks
  filter(!is.na(cog), !task == "iaf", ss %in% this_ss) %>% 
  group_by(ss, elec, eyes, task) %>%
  summarise(m = mean(cog), n = n()) %>%
  ungroup() %>%
  mutate(task = fct_relevel(task, c("pre", "post")))

# then collapse by subject for summary stats
cog_res_sum <- 
  cog_res_block %>%
  group_by(elec, eyes, task) %>%
  summarise(
    M = mean(m), 
    SD = sd(m), 
    N = n(), 
    SEM = SD/sqrt(N), 
    MOE = qt(.975, df = N-1)*SEM
    ) %>%
  ungroup()
```

```{r}
# function to plot mean IAF filtered by eyes and elec
mean_plot_elec <- 
  function(data_sum, data, eyes, elec){
  
  # filters data according to arguments
  this_data_sum <- data_sum %>% filter(eyes %in% {{eyes}}, elec %in% {{elec}})
  this_data <- data %>% filter(eyes %in% {{eyes}}, elec %in% {{elec}})
  
  # produces plot
  pn <- position_nudge(x = .2) # position nudge
  pj <- position_jitter(width = .1, height = .1)
  ggplot(this_data_sum, aes(task, M)) +
  geom_point(data = this_data, aes(y = m), shape = 1, alpha = .5, position = pj) +
  geom_point(position = pn) +
  geom_errorbar(aes(ymin = M-MOE, ymax = M+MOE), width = .1, position = pn) +
  geom_line(aes(group = 1), linetype = 2, position = pn) +
  theme_bw() +
  coord_cartesian(ylim = c(8, 13)) +
  scale_y_continuous(breaks = seq(8, 13, 1), minor_breaks = NULL) +
  facet_wrap(~elec)
}
```

```{r}
#| label: eolh
#| fig-cap: Eyes Open - Left Hemisphere.
#| fig-width: 11
#| fig-height: 11
#| fig-column: page-right

# eyes open - A electrodes
mean_plot_elec(
  cog_res_sum, cog_res_block, eyes = "open", elec = chan_locs$labels[1:32]
  ) +
  labs(
    x = "Task", 
    y = "Center of Gravity (Hz)", 
    caption = "95% CI error bars.",
    title = "Eyes Open - Left Hemisphere"
    )
```

```{r}
#| label: eorh
#| fig-cap: Eyes Open - Right Hemisphere.
#| fig-width: 11
#| fig-height: 11
#| fig-column: page-right
#| 
# eyes open - B electrodes
mean_plot_elec(
  cog_res_sum, cog_res_block, eyes = "open", elec = chan_locs$labels[33:64]
  ) +
  labs(
    x = "Task", 
    y = "Center of Gravity (Hz)", 
    caption = "95% CI error bars.",
    title = "Eyes Open - Right Hemisphere"
    )
```

```{r}
#| label: eclh
#| fig-cap: Eyes Closed - Left Hemisphere.
#| fig-width: 11
#| fig-height: 11
#| fig-column: page-right
#| 
# eyes closed - A electrodes
mean_plot_elec(
  cog_res_sum, cog_res_block, eyes = "closed", elec = chan_locs$labels[1:32]
  ) +
  labs(
    x = "Task", 
    y = "Center of Gravity (Hz)", 
    caption = "95% CI error bars.",
    title = "Eyes Closed - Left Hemisphere"
    )
```

```{r}
#| label: ecrh
#| fig-cap: Eyes Closed - Right Hemisphere.
#| fig-width: 11
#| fig-height: 11
#| fig-column: page-right


# eyes closed - B electrodes
mean_plot_elec(
  cog_res_sum, cog_res_block, eyes = "open", elec = chan_locs$labels[33:64]
  ) +
  labs(
    x = "Task", 
    y = "Center of Gravity (Hz)", 
    caption = "95% CI error bars.",
    title = "Eyes Closed - Right Hemisphere"
    )
```

# Mixed Linear Modeling

```{r}
# these are actual ss
this_ss <-
  c(
    "146183842001_1", "146183842003_1", "146183842004_1", "146183842006_1", 
    "146183842007_1"
    )

# prepares data for modeling
mod_data <- 
  cog_res %>% 
  filter(ss %in% this_ss, !task == "iaf") %>%
  mutate(
    block = block - 1,
    across(c(eyes, task), ~factor(.x))
    )

# sets contrasts
contrasts(mod_data$eyes) <- cbind(eyes = c(.5, -.5))
contrasts(mod_data$task) <- cbind(task = c(.5, -.5))

# computes models
mod <-
  mod_data %>% 
  nest_by(elec) %>%
  mutate(
    mod1 = list(lmer(cog ~ 1 + block + eyes*task + (1 | ss), data = data)),
    mod2 = list(lmer(cog ~ 1 + block + eyes*task + (1 + eyes | ss), data = data)),
    mod3 = list(lmer(cog ~ 1 + block + eyes*task + (1 + task | ss), data = data))   
    )

# looking at improvements in model fit
elec_list <- as.list(1:64) # 64 electrodes
names(elec_list) <- chan_locs$labels # names list by electrode name

# computes and extracts model comparison between model 1 and 2
# i.e., whether adding a random slope of eyes improves model fit
mod_fit <- 
  elec_list %>% 
  map(~anova(mod$mod1[[.x]], mod$mod2[[.x]])) %>% # compares models
  map_dfr(~as_tibble(.x, rownames = "mod"), .id = "elec") %>% # extracts
  mutate(mod = regmatches(mod, regexpr("mod\\d", mod))) # cleans up this col

```


